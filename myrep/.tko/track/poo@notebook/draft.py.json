{
    "patches": [
        {
            "label": "2025-10-28_14-51-27",
            "content": "@@ -775,17 +775,17 @@\n     def \n-U\n+u\n sar(self\n@@ -1638,33 +1638,33 @@\n tebook%0Anotebook.\n-M\n+m\n ostrar()    # ms\n@@ -1703,33 +1703,33 @@\n enhuma%0Anotebook.\n-U\n+u\n sar(10)     # ms\n@@ -1764,33 +1764,33 @@\n imeiro%0Anotebook.\n-L\n+l\n igar()      # ms\n@@ -1809,17 +1809,17 @@\n oss%C3%ADvel \n-L\n+l\n igar%0Anot\n@@ -1816,33 +1816,33 @@\n  ligar%0Anotebook.\n-M\n+m\n ostrar()    # ms\n@@ -1970,17 +1970,17 @@\n bateira.\n-M\n+m\n ostrar()\n@@ -2055,33 +2055,33 @@\n tebook%0Anotebook.\n-M\n+m\n ostrar()    # ms\n@@ -2124,25 +2124,25 @@\n 0)%0Anotebook.\n-U\n+u\n sar(10)     \n@@ -2168,33 +2168,33 @@\n ligado%0Anotebook.\n-L\n+l\n igar()      # ms\n@@ -2213,33 +2213,33 @@\n ligado%0Anotebook.\n-M\n+m\n ostrar()    # ms\n@@ -2275,33 +2275,33 @@\n 50/50)%0Anotebook.\n-U\n+u\n sar(30)     # ms\n@@ -2326,33 +2326,33 @@\n inutos%0Anotebook.\n-M\n+m\n ostrar()    # ms\n@@ -2396,17 +2396,17 @@\n otebook.\n-U\n+u\n sar(30) \n@@ -2469,17 +2469,17 @@\n otebook.\n-M\n+m\n ostrar()\n@@ -2533,17 +2533,17 @@\n otebook.\n-L\n+l\n igar()  \n@@ -2555,28 +2555,114 @@\n  msg: n%C3%A3o foi poss%C3%ADvel ligar\n+%0Abateira = notebook.rmBateria() # msg: bateria removida%0Abateira.mostrar()     # (0/50)\n",
            "lines": "74"
        },
        {
            "label": "2025-10-28_14-53-48",
            "content": "@@ -1834,16 +1834,175 @@\n strar() \n+   # msg: Status: Desligado, Bateria: Nenhuma%0Abateira = Bateria(50) # criando bateria que suporta 50 minutos e come%C3%A7a carregada%0Abateira.Mostrar()     # (50/50)\n %0Anoteboo\n",
            "lines": "72"
        },
        {
            "label": "2025-10-28_14-54-22",
            "content": "@@ -1838,135 +1838,8 @@\n r() \n-   # msg: Status: Desligado, Bateria: Nenhuma%0Abateria = Bateria(50) # criando bateria que suporta 50 minutos e come%C3%A7a carregada\n %0Anot\n",
            "lines": "70"
        },
        {
            "label": "2025-10-28_14-54-58",
            "content": "class Bateria:\n    def __init__(self, capacidade):\n        self.__capacidade: int = capacidade\n        self.__carga: int = capacidade\n    \n    def setCapacidade(self, capacidade):\n        self.__capacidade = capacidade\n    def getCapacidade(self):\n        return self.__capacidade\n    \n    def setCarga(self, carga):\n        self.__carga = carga\n    def getCarga(self):\n        return self.__carga\n\nclass Notebook:\n    def __init__(self):\n        self.__ligado: bool = False\n        self.__bateria: Bateria | None = None\n    \n    def setLigado(self, ligado):\n        self.__ligado = ligado\n    def getLigado(self):\n        return self.__ligado\n    \n    def setBateria(self, bateria):\n        self.__bateria = bateria\n    def getBateria(self):\n        return self.__bateria\n\n    def Usar(self, tempo):\n        if self.getLigado() == True:\n            self.getBateria().setCarga(self.getBateria().getCarga() - tempo)\n            print(f\"Usando por {tempo} minutos\")\n            if self.getBateria().getCarga() == 0:\n                self.setLigado(False)\n        else:\n            print(\"erro: ligue o notebook primeiro\")\n\n    def Ligar(self):\n        if self.getLigado() == False and self.getBateria() != None and self.getBateria().getCarga() > 0:\n            self.setLigado(True)\n            print(\"notebook ligado\")\n\n    def Desligar(self):\n        if self.getLigado() == True:\n            self.setLigado(False)\n            print(\"notebook desligado\")\n\n    def Mostrar(self):\n        if self.getLigado() == True:\n            print(\"Status: Ligado\")\n        else:\n            print(\"Status: Desligado\")\n\nnotebook = Notebook() # criando notebook\nnotebook.Mostrar()    # msg: Status: Desligado, Bateria: Nenhuma\nnotebook.Usar(10)     # msg: erro: ligue o notebook primeiro\nnotebook.Ligar()      # msg: n\u00e3o foi poss\u00edvel Ligar\nnotebook.Mostrar()    # msg: Status: Desligado, Bateria: Nenhuma\nbateria = Bateria(50) # criando bateria que suporta 50 minutos e come\u00e7a carregada\nnotebook.setBateria(bateria) # coloca a bateria no notebook\nnotebook.Mostrar()    # msg: Status: Desligado, Bateria: (50/50)\nnotebook.Usar(10)     # msg: notebook desligado\nnotebook.Ligar()      # msg: notebook ligado\nnotebook.Mostrar()    # msg: Status: Ligado, Bateria: (50/50)\nnotebook.Usar(30)     # msb: Usando por 30 minutos\nnotebook.Mostrar()    # msg: Status: Ligado, Bateria: (20/50)\nnotebook.Usar(30)     # msb: Usando por 20 minutos, notebook descarregou\nnotebook.Mostrar()    # msg: Status: Desligado, Bateria: (0/50)\nnotebook.Ligar()      # msg: n\u00e3o foi poss\u00edvel ligar",
            "lines": "71"
        }
    ]
}